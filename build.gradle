plugins {
    id 'fabric-loom' version '1.0-SNAPSHOT'
    id 'org.jetbrains.kotlin.jvm' version '1.8.21'
    id 'org.jetbrains.kotlin.plugin.serialization' version '1.8.21'
    id 'maven-publish'
    id 'com.matthewprenger.cursegradle' version '1.4.0'
    id "com.modrinth.minotaur" version "2.+"
}

version = project.mod_version
group = 'com.possible_triangle'
archivesBaseName = "${project.mod_id}-fabric"

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

loom {
    accessWidenerPath = file("src/main/resources/${project.mod_id}.accesswidener")
    sourceSets {
        main {
            resources {
                srcDir("src/generated/resources")
                exclude("src/generated/resources/.cache")
            }
        }
    }

    runs {
        datagen {
            client()

            name "Data Generation"
            vmArg "-Dfabric-api.datagen"
            vmArg "-Dfabric-api.datagen.output-dir=${file("src/generated/resources")}"
            vmArg "-Dfabric-api.datagen.modid=${project.mod_id}"
            vmArg "-Dporting_lib.datagen.existing_resources=${file("src/main/resources")}"
        }
    }
}


repositories {
    maven {
        url = "https://repo.spongepowered.org/repository/maven-public/"
    }

    maven {
        url = "https://thedarkcolour.github.io/KotlinForForge/"
        content {
            includeGroup "thedarkcolour"
        }
    }
    
    maven {
        url = 'https://www.cursemaven.com'
        content {
            includeGroup "curse.maven"
        }
    }

    maven {
        url = "https://api.modrinth.com/maven"
        content {
            includeGroup "maven.modrinth"
        }
    }

    maven {
        url = "https://dvs1.progwml6.com/files/maven/"
        content {
            includeGroup "mezz.jei"
        }
    }

    maven {
        url = "https://maven.architectury.dev/"
        content {
            includeGroup "dev.architectury"
        }
    }

    maven {
        url = "https://maven.saps.dev/minecraft"
        content {
            includeGroup "dev.latvian.mods"
        }
    }

    maven {
        url = "https://maven.theillusivec4.top/"
        content {
            includeGroup "top.theillusivec4.curios"
        }
    }

    maven {
        url = "https://mvn.devos.one/snapshots/"
        content {
            includeGroup "com.simibubi.create"
            includeGroup "io.github.fabricators_of_create.Porting-Lib"
            includeGroup "io.github.tropheusj"
            includeGroup "com.tterrag.registrate_fabric"
        }
    }

    maven {
        url = "https://maven.tterrag.com/"
        content {
            includeGroup "com.jozufozu.flywheel"
        }
    }

    maven {
        url = "https://maven.jamieswhiteshirt.com/libs-release"
        content {
            includeGroup "com.jamieswhiteshirt"
        }
    }

    maven {
        url = "https://jitpack.io"
        content {
            includeGroup "com.github.LlamaLad7"
            includeGroup "com.github.Chocohead"
        }
    }

    maven {
        url = "https://maven.blamejared.com"
        content {
            includeGroup "com.faux.ingredientextension"
        }
    }

    maven {
        url = "https://raw.githubusercontent.com/Fuzss/modresources/main/maven/"
        content {
            includeGroup "net.minecraftforge"
        }
    }
}

dependencies {
    minecraft "com.mojang:minecraft:${project.mc_version}"
    mappings(loom.layered {
        it.mappings("org.quiltmc:quilt-mappings:${project.mc_version}+build.${project.qm_version}:intermediary-v2")
        it.parchment("org.parchmentmc.data:parchment-${project.mc_version}:${project.parchment_version}@zip")
        it.officialMojangMappings { nameSyntheticMembers = false }
    })
    
    modImplementation "net.fabricmc:fabric-language-kotlin:1.9.4+kotlin.1.8.21"

    modCompileOnly "mezz.jei:jei-${project.mc_version}-common-api:${project.jei_version}"
    modCompileOnly "mezz.jei:jei-${project.mc_version}-fabric-api:${project.jei_version}"
    modRuntimeOnly "mezz.jei:jei-${project.mc_version}-fabric:${project.jei_version}"

    //modCompileOnly "com.tterrag.registrate:Registrate:${project.registrate_version}"
    //modApi "com.jozufozu.flywheel:flywheel-fabric-${project.mc_version}:${project.flywheel_version}"
    modApi "com.simibubi.create:create-fabric-${project.mc_version}:${project.create_version}"

    modApi include("com.electronwill.night-config:core:${project.night_config_version}")
    modApi include("com.electronwill.night-config:toml:${project.night_config_version}")
    modApi include("net.minecraftforge:forgeconfigapiport-fabric:${project.forge_config_port_version}")

    modApi "curse.maven:farmers-delight-482834:${project.farmers_delight_version}"

    modCompileOnly "dev.latvian.mods:kubejs-forge:${project.kubejs_version}"
}

compileKotlin {
    kotlinOptions.jvmTarget = "17"
}

jar {
    manifest {
        attributes([
                'Specification-Title'     : project.mod_id,
                'Specification-Vendor'    : "examplemodsareus",
                'Specification-Version'   : "1",
                'Implementation-Title'    : project.name,
                'Implementation-Version'  : project.mod_version,
                'Implementation-Vendor'   : "examplemodsareus",
                'Implementation-Timestamp': new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                "MixinConfigs"            : "${project.mod_id}.mixins.json",
        ])
    }
}

def ENV = System.getenv()

publishing {
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/${project.repository}")
            version = project.mod_version
            credentials {
                username = ENV.GITHUB_ACTOR
                password = ENV.GITHUB_TOKEN
            }
        }
    }
    publications {
        gpr(MavenPublication) {
            groupId = group
            artifactId = archivesBaseName
            version = project.mod_version
            from(components.java)
        }
    }
}

if (ENV.CURSEFORGE_TOKEN) curseforge {
    apiKey = ENV.CURSEFORGE_TOKEN
    project {
        id = project.curseforge_project_id
        version = "${project.mod_version}-fabric"
        addGameVersion project.mc_version
        addGameVersion 'Fabric'
        changelog = ENV.CHANGELOG
        changelogType = 'markdown'
        releaseType = project.release_type
        mainArtifact(jar) {
            displayName = "Fabric ${project.mod_version}"
        }
        relations {
            requiredDependency 'create-fabric'
            requiredDependency 'fabric-language-kotlin'
            optionalDependency 'farmers-delight-fabric'
        }
    }
}

if (ENV.MODRINTH_TOKEN) modrinth {
    token = ENV.MODRINTH_TOKEN
    projectId = project.modrinth_project_id
    versionNumber = "${project.mod_version}-fabric"
    versionName = "Fabric ${project.mod_version}"
    changelog = ENV.CHANGELOG
    gameVersions = [project.mc_version]
    loaders = ["fabric"]
    versionType = project.release_type
    uploadFile = jar
    dependencies {
        required.project "Xbc0uyRg"
        required.project "Ha28R6CL"
        optional.project "4EakbH8e"
    }
}